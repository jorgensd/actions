name: Test install-dolfinx action

on:
  push:
    # The CI is executed on every push on every branch
    branches:
      - "**"
  pull_request:
    # The CI is executed on every pull request to the main branch
    branches:
      - main

  workflow_call:
  workflow_dispatch:
  schedule:
    # The CI is executed every day at 8am
    - cron: "0 8 * * *"

jobs:
  test-mpich:
    runs-on: "ubuntu-latest"
    container: ghcr.io/fenics/test-env:current-mpich
    env:
      working-directory: ./test_directory
    strategy:
      matrix:
        branch: [main, release]
        petsc_arch: [linux-gnu-real64-32, linux-gnu-complex64-32]
        build_mode: [Release, Debug]

    steps:
      - uses: actions/checkout@v4

      - name: Make working directory
        run: mkdir -p  ${{ env.working-directory }}

      - uses: ./install-dolfinx
        with:
          dolfinx: ${{ matrix.branch }}
          ufl: ${{ matrix.branch }}
          ffcx: ${{ matrix.branch }}
          basix: ${{ matrix.branch }}
          build_mode: ${{ matrix.build_mode }}
          petsc_arch: ${{ matrix.petsc_arch }}

      - name: Check if DOLFINx runs
        working-directory: ${{ env.working-directory }}
        run: python3 -c "import dolfinx; print(dolfinx.__version__)"

      - name: Check if DOLFINx runs in parallel
        working-directory: ${{ env.working-directory }}
        run: mpirun -n 2 python3 -c "from mpi4py import MPI; import dolfinx; print(dolfinx.__version__)"

  test-openmpi:
    runs-on: "ubuntu-latest"
    container: ghcr.io/fenics/test-env:current-openmpi
    strategy:
      matrix:
        branch: [main, release]
        petsc_arch: [linux-gnu-real64-32, linux-gnu-complex64-32]
        build_mode: [Release, Debug]
    env:
      working-directory: ./test_directory
      OMPI_ALLOW_RUN_AS_ROOT: 1
      OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
      OMPI_MCA_plm: ssh
      OMPI_MCA_plm_ssh_agent: false

    steps:
      - uses: actions/checkout@v4

      - name: Make working directory
        run: mkdir -p  ${{ env.working-directory }}

      - name: Install DOLFINx
        uses: ./install-dolfinx
        with:
          dolfinx: ${{ matrix.branch }}
          ufl: ${{ matrix.branch }}
          ffcx: ${{ matrix.branch }}
          basix: ${{ matrix.branch }}
          build_mode: ${{ matrix.build_mode }}
          petsc_arch: ${{ matrix.petsc_arch }}

      - name: Check if DOLFINx runs
        working-directory: ${{ env.working-directory }}
        run: python3 -c "import dolfinx; print(dolfinx.__version__)"

      - name: Check if DOLFINx runs in parallel
        working-directory: ${{ env.working-directory }}
        run: mpirun -n 2 python3 -c "from mpi4py import MPI; import dolfinx; print(dolfinx.__version__)"
